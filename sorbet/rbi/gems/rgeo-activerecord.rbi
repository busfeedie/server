# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/rgeo-activerecord/all/rgeo-activerecord.rbi
#
# rgeo-activerecord-7.0.1

module RGeo
end
module RGeo::ActiveRecord
  def self.geometric_type_from_name(name); end
  def self.spatial_expressions_supported?; end
end
module RGeo::ActiveRecord::SpatialExpressions
  def st_area(units = nil); end
  def st_asbinary; end
  def st_astext; end
  def st_boundary; end
  def st_buffer(distance, units = nil); end
  def st_centroid; end
  def st_contains(rhs); end
  def st_convexhull; end
  def st_crosses(rhs); end
  def st_difference(rhs); end
  def st_dimension; end
  def st_disjoint(rhs); end
  def st_distance(rhs, units = nil); end
  def st_endpoint; end
  def st_envelope; end
  def st_equals(rhs); end
  def st_exteriorring; end
  def st_function(function, *args); end
  def st_geometryn(n); end
  def st_geometrytype; end
  def st_interiorringn(n); end
  def st_intersection(rhs); end
  def st_intersects(rhs); end
  def st_isclosed; end
  def st_isempty; end
  def st_isring; end
  def st_issimple; end
  def st_length(units = nil); end
  def st_m; end
  def st_numgeometries; end
  def st_numinteriorrings; end
  def st_numpoints; end
  def st_overlaps(rhs); end
  def st_pointn(n); end
  def st_pointonsurface; end
  def st_relate(rhs, matrix = nil); end
  def st_srid; end
  def st_startpoint; end
  def st_symdifference(rhs); end
  def st_touches(rhs); end
  def st_union(rhs); end
  def st_within(rhs); end
  def st_x; end
  def st_y; end
  def st_z; end
end
class Arel::Attributes::Attribute < Anonymous_Struct_22
  include RGeo::ActiveRecord::SpatialExpressions
end
module Arel
  def self.spatial(arg); end
end
class RGeo::ActiveRecord::SpatialFactoryStore
  def clear; end
  def closest_factory(attrs); end
  def cmp_attrs(attrs, oth); end
  def default(attrs = nil); end
  def default=(factory); end
  def default_for_attrs(attrs); end
  def factory(attrs); end
  def filter_attrs(attrs); end
  def initialize; end
  def register(factory, attrs = nil); end
  def registry; end
  def registry=(arg0); end
  def self.allocate; end
  def self.new(*arg0, **); end
  def to_factory_attrs(attrs); end
  extend Singleton::SingletonClassMethods
  include Singleton
end
class RGeo::ActiveRecord::SpatialFactoryStore::Entry < Struct
  def attrs; end
  def attrs=(_); end
  def factory; end
  def factory=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
module RGeo::ActiveRecord::SpatialToSql
  def st_func(standard_name); end
  def visit_RGeo_ActiveRecord_SpatialNamedFunction(node, collector); end
  def visit_in_spatial_context(node, collector); end
end
class RGeo::ActiveRecord::SpatialConstantNode
  def delegate; end
  def initialize(delegate); end
  include RGeo::ActiveRecord::SpatialExpressions
end
class Arel::Visitors::Visitor
  def visit_RGeo_ActiveRecord_SpatialConstantNode(node, collector); end
end
class Arel::Visitors::Dot < Arel::Visitors::Visitor
  def visit_RGeo_Cartesian_BoundingBox(o); end
  def visit_RGeo_Feature_Instance(o); end
end
class RGeo::ActiveRecord::SpatialNamedFunction < Arel::Nodes::NamedFunction
  def initialize(name, expr, spatial_flags = nil, aliaz = nil); end
  def spatial_argument?(index); end
  def spatial_result?; end
  include RGeo::ActiveRecord::SpatialExpressions
end
module RGeo::ActiveRecord::GeometryMixin
  def as_json(opts = nil); end
  def self.generate_json(geom); end
  def self.set_json_generator(value = nil, &block); end
end
class RGeo::Geographic::ProjectedGeometryCollectionImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::ProjectedLinearRingImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::ProjectedLineImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::ProjectedLineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::ProjectedMultiLineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::ProjectedMultiPointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::ProjectedMultiPolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::ProjectedPointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::ProjectedPolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::SphericalGeometryCollectionImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::SphericalLinearRingImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::SphericalLineImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::SphericalLineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::SphericalMultiLineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::SphericalMultiPointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::SphericalMultiPolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::SphericalPointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geographic::SphericalPolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMGeometryCollectionImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMGeometryImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMLinearRingImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMLineImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMLineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMMultiLineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMMultiPointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMMultiPolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMPointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::ZMPolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Cartesian::GeometryCollectionImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Cartesian::LinearRingImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Cartesian::LineImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Cartesian::LineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Cartesian::MultiLineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Cartesian::MultiPointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Cartesian::MultiPolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Cartesian::PointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Cartesian::PolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPIGeometryCollectionImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPIGeometryImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPILinearRingImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPILineImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPILineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPIMultiLineStringImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPIMultiPointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPIMultiPolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPIPointImpl
  include RGeo::ActiveRecord::GeometryMixin
end
class RGeo::Geos::CAPIPolygonImpl
  include RGeo::ActiveRecord::GeometryMixin
end
